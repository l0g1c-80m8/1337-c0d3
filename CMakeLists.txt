cmake_minimum_required(VERSION 3.26)

set(PROJECT_NAME "1337_c0d3")
project(${PROJECT_NAME})

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

add_executable(${PROJECT_NAME}_7 "cpp/7. reverse-integer.cpp")
add_executable(${PROJECT_NAME}_8 "cpp/8. string-to-integer.cpp")
add_executable(${PROJECT_NAME}_9 "cpp/9. palindrome-number.cpp")
add_executable(${PROJECT_NAME}_10 "cpp/10. regular-expression-matching.cpp")
add_executable(${PROJECT_NAME}_11 "cpp/11. container-with-most-water.cpp")
add_executable(${PROJECT_NAME}_12 "cpp/12. integer-to-roman.cpp")
add_executable(${PROJECT_NAME}_13 "cpp/13. roman-to-integer.cpp")
add_executable(${PROJECT_NAME}_14 "cpp/14. longest-common-prefix.cpp")
add_executable(${PROJECT_NAME}_15 "cpp/15. 3-sum.cpp")
add_executable(${PROJECT_NAME}_16 "cpp/16. 3-sum-closest.cpp")
add_executable(${PROJECT_NAME}_17 "cpp/17. letter-combinations-of-a-phone-number.cpp")
add_executable(${PROJECT_NAME}_18 "cpp/18. 4-sum.cpp")
add_executable(${PROJECT_NAME}_19 "cpp/19. remove-nth-node-from-end-of-list.cpp")
add_executable(${PROJECT_NAME}_20 "cpp/20. valid-parentheses.cpp")
add_executable(${PROJECT_NAME}_21 "cpp/21. merge-two-sorted-lists.cpp")
add_executable(${PROJECT_NAME}_22 "cpp/22. generate-parentheses.cpp")
add_executable(${PROJECT_NAME}_23 "cpp/23. merge-k-sorted-lists.cpp")
#add_executable(${PROJECT_NAME}_24 "cpp/24. swap-nodes-in-pairs.cpp")
#add_executable(${PROJECT_NAME}_25 "cpp/25. reverse-nodes-in-k-group.cpp")
add_executable(${PROJECT_NAME}_26 "cpp/26. remove-duplicates-from-sorted-array.cpp")
add_executable(${PROJECT_NAME}_27 "cpp/27. remove-element.cpp")
add_executable(${PROJECT_NAME}_28 "cpp/28. find-the-index-of-the-first-occurrence-in-a-string.cpp")
add_executable(${PROJECT_NAME}_29 "cpp/29. divide-two-integers.cpp")
#add_executable(${PROJECT_NAME}_30 "cpp/30. substring-with-concatenation-of-all-words.cpp")
add_executable(${PROJECT_NAME}_31 "cpp/31. next-permutation.cpp")
#add_executable(${PROJECT_NAME}_32 "cpp/32. longest-valid-parenthesis.cpp")
add_executable(${PROJECT_NAME}_33 "cpp/33. search-in-rotated-sorted-array.cpp")
add_executable(${PROJECT_NAME}_34 "cpp/34. find-first-and-last-position-of-element-in-sorted-array.cpp")
add_executable(${PROJECT_NAME}_35 "cpp/35. search-insert-position.cpp")
add_executable(${PROJECT_NAME}_36 "cpp/36. valid-sudoku.cpp")
#add_executable(${PROJECT_NAME}_37 "cpp/37. sudoku-solver.cpp")
add_executable(${PROJECT_NAME}_38 "cpp/38. count-and-say.cpp")
add_executable(${PROJECT_NAME}_39 "cpp/39. combination-sum.cpp")
add_executable(${PROJECT_NAME}_40 "cpp/40. combination-sum-ii.cpp")
#add_executable(${PROJECT_NAME}_41 "cpp/41. first_missing_positive.cpp")
add_executable(${PROJECT_NAME}_42 "cpp/42. trapping-rain-water.cpp")
add_executable(${PROJECT_NAME}_43 "cpp/43. multiply-strings.cpp")
#add_executable(${PROJECT_NAME}_44 "cpp/44. wildcard-matching.cpp")
add_executable(${PROJECT_NAME}_45 "cpp/45. jump-game-ii.cpp")
add_executable(${PROJECT_NAME}_46 "cpp/46. permutations.cpp")
add_executable(${PROJECT_NAME}_47 "cpp/47. permutations-ii.cpp")
add_executable(${PROJECT_NAME}_48 "cpp/48. rotate-image.cpp")
add_executable(${PROJECT_NAME}_49 "cpp/49. group-anagrams.cpp")
add_executable(${PROJECT_NAME}_50 "cpp/50. pow(x, n).cpp")
#add_executable(${PROJECT_NAME}_51 "cpp/51. n-queens.cpp")
#add_executable(${PROJECT_NAME}_52 "cpp/52. n-queens-ii.cpp")
add_executable(${PROJECT_NAME}_53 "cpp/53. maximum-subarray.cpp")
add_executable(${PROJECT_NAME}_54 "cpp/54. spiral-matrix.cpp")
add_executable(${PROJECT_NAME}_55 "cpp/55. jump-game.cpp")
add_executable(${PROJECT_NAME}_56 "cpp/56. merge-intervals.cpp")
add_executable(${PROJECT_NAME}_57 "cpp/57. insert-interval.cpp")
add_executable(${PROJECT_NAME}_58 "cpp/58. length-of-last-word.cpp")
add_executable(${PROJECT_NAME}_59 "cpp/59. spiral-matrix-ii.cpp")
#add_executable(${PROJECT_NAME}_60 "cpp/60. permutation-sequence.cpp")
add_executable(${PROJECT_NAME}_61 "cpp/61. rotate-list.cpp")
add_executable(${PROJECT_NAME}_62 "cpp/62. unique-paths.cpp")
add_executable(${PROJECT_NAME}_63 "cpp/63. unique-paths-ii.cpp")
add_executable(${PROJECT_NAME}_64 "cpp/64. minimum-path-sum.cpp")
